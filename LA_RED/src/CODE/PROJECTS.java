/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package CODE;

import CORE.BE;
import java.awt.Color;
import static java.lang.Integer.parseInt;
import java.util.StringTokenizer;
import javax.swing.JOptionPane;
import javax.swing.text.DefaultHighlighter;
import javax.swing.text.Highlighter;
import javax.swing.text.Style;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import la_red.LA_RED;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;

/**
 *
 * @author SAMSUNG
 */
public class PROJECTS extends javax.swing.JFrame {
    private StyledDocument docOriginal;
    private JSONParser JSON = new JSONParser();
    private int id;
    private String endpoint = "listarProyectos";
    private boolean forkeados = false;
    
    /**
     * Creates new form PROJECTS
     */
    public PROJECTS() {
        initComponents();
        docOriginal = txtCodigo.getStyledDocument();
        this.id = LA_RED.usuario.getId();
    }
    public PROJECTS(int id) {
        initComponents();
        this.id = id;
        txtCodigo.setEditable(false);
        docOriginal = txtCodigo.getStyledDocument();
    }
    public PROJECTS(String endpoint, boolean forkeados) {
        initComponents();
        this.endpoint = endpoint;
        txtCodigo.setEditable(true);
        docOriginal = txtCodigo.getStyledDocument();
        this.id = LA_RED.usuario.getId();
        this.forkeados = forkeados;
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jmMenuProyectos = new javax.swing.JPopupMenu();
        jmCambiarNombreC = new javax.swing.JMenuItem();
        jmEliminarC = new javax.swing.JMenuItem();
        jmCrearProyecto = new javax.swing.JMenuItem();
        jmCrearArchivo = new javax.swing.JMenuItem();
        jmReadme = new javax.swing.JMenuItem();
        jmPullear = new javax.swing.JMenuItem();
        jmMerge = new javax.swing.JMenuItem();
        jmMenuRaiz = new javax.swing.JPopupMenu();
        jmAddProject = new javax.swing.JMenuItem();
        jmMenuArchivo = new javax.swing.JPopupMenu();
        jmCambiarNombreA = new javax.swing.JMenuItem();
        jmEliminarArchivo = new javax.swing.JMenuItem();
        jmComparador = new javax.swing.JMenuItem();
        jdReadme = new javax.swing.JDialog();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtReadme = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jdComentario = new javax.swing.JDialog();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtComentarios = new javax.swing.JTextPane();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtComentario = new javax.swing.JTextArea();
        btnComentar = new javax.swing.JButton();
        jmMenuPAmigos = new javax.swing.JPopupMenu();
        jmComentar = new javax.swing.JMenuItem();
        jmCalificar = new javax.swing.JMenuItem();
        jmFork = new javax.swing.JMenuItem();
        jdCalificar = new javax.swing.JDialog();
        jButton3 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        rdb3 = new javax.swing.JRadioButton();
        rdb1 = new javax.swing.JRadioButton();
        rdb2 = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        rdb5 = new javax.swing.JRadioButton();
        rdb4 = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btgValor = new javax.swing.ButtonGroup();
        jdComparador = new javax.swing.JDialog();
        jScrollPane7 = new javax.swing.JScrollPane();
        txtCopia = new javax.swing.JTextPane();
        jScrollPane8 = new javax.swing.JScrollPane();
        txtOriginal = new javax.swing.JTextArea();
        jButton4 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtCodigo = new javax.swing.JTextPane();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtProyectos = new javax.swing.JTree();

        jmCambiarNombreC.setText("Cambiar Nombre");
        jmCambiarNombreC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmCambiarNombreCActionPerformed(evt);
            }
        });
        jmMenuProyectos.add(jmCambiarNombreC);

        jmEliminarC.setText("Eliminar");
        jmEliminarC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmEliminarCActionPerformed(evt);
            }
        });
        jmMenuProyectos.add(jmEliminarC);

        jmCrearProyecto.setText("Añadir Carpeta");
        jmCrearProyecto.setToolTipText("");
        jmCrearProyecto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmCrearProyectoActionPerformed(evt);
            }
        });
        jmMenuProyectos.add(jmCrearProyecto);

        jmCrearArchivo.setText("Crear Archivo");
        jmCrearArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmCrearArchivoActionPerformed(evt);
            }
        });
        jmMenuProyectos.add(jmCrearArchivo);

        jmReadme.setText("Readme");
        jmReadme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmReadmeActionPerformed(evt);
            }
        });
        jmMenuProyectos.add(jmReadme);

        jmPullear.setText("Pullear");
        jmPullear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmPullearActionPerformed(evt);
            }
        });
        jmMenuProyectos.add(jmPullear);

        jmMerge.setText("Merge");
        jmMerge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmMergeActionPerformed(evt);
            }
        });
        jmMenuProyectos.add(jmMerge);

        jmAddProject.setText("Añadir Proyecto");
        jmAddProject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmAddProjectActionPerformed(evt);
            }
        });
        jmMenuRaiz.add(jmAddProject);

        jmCambiarNombreA.setText("Cambiar Nombre");
        jmCambiarNombreA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmCambiarNombreAActionPerformed(evt);
            }
        });
        jmMenuArchivo.add(jmCambiarNombreA);

        jmEliminarArchivo.setText("Eliminar");
        jmEliminarArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmEliminarArchivoActionPerformed(evt);
            }
        });
        jmMenuArchivo.add(jmEliminarArchivo);

        jmComparador.setText("Comparador");
        jmComparador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmComparadorActionPerformed(evt);
            }
        });
        jmMenuArchivo.add(jmComparador);

        jdReadme.setTitle("Readme.txt");

        txtReadme.setColumns(20);
        txtReadme.setRows(5);
        jScrollPane3.setViewportView(txtReadme);

        jButton2.setText("Guardar");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jdReadmeLayout = new javax.swing.GroupLayout(jdReadme.getContentPane());
        jdReadme.getContentPane().setLayout(jdReadmeLayout);
        jdReadmeLayout.setHorizontalGroup(
            jdReadmeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jdReadmeLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 692, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jdReadmeLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(32, 32, 32))
        );
        jdReadmeLayout.setVerticalGroup(
            jdReadmeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jdReadmeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addContainerGap())
        );

        jdComentario.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jdComentarioComponentShown(evt);
            }
        });

        jScrollPane4.setViewportView(txtComentarios);

        txtComentario.setColumns(20);
        txtComentario.setRows(5);
        jScrollPane5.setViewportView(txtComentario);

        btnComentar.setText("Comentar");
        btnComentar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnComentarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jdComentarioLayout = new javax.swing.GroupLayout(jdComentario.getContentPane());
        jdComentario.getContentPane().setLayout(jdComentarioLayout);
        jdComentarioLayout.setHorizontalGroup(
            jdComentarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jdComentarioLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jdComentarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 489, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jdComentarioLayout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnComentar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jdComentarioLayout.setVerticalGroup(
            jdComentarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jdComentarioLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jdComentarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane5)
                    .addComponent(btnComentar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jmComentar.setText("Comentar");
        jmComentar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmComentarActionPerformed(evt);
            }
        });
        jmMenuPAmigos.add(jmComentar);

        jmCalificar.setText("Calificar");
        jmCalificar.setToolTipText("");
        jmCalificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmCalificarActionPerformed(evt);
            }
        });
        jmMenuPAmigos.add(jmCalificar);

        jmFork.setText("Fork");
        jmFork.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmForkActionPerformed(evt);
            }
        });
        jmMenuPAmigos.add(jmFork);

        jdCalificar.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jdCalificarComponentShown(evt);
            }
        });

        jButton3.setText("Puntuar");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("1");

        btgValor.add(rdb3);
        rdb3.setIconTextGap(10);
        rdb3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdb3ActionPerformed(evt);
            }
        });

        btgValor.add(rdb1);
        rdb1.setIconTextGap(10);
        rdb1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdb1ActionPerformed(evt);
            }
        });

        btgValor.add(rdb2);
        rdb2.setIconTextGap(10);
        rdb2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdb2ActionPerformed(evt);
            }
        });

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("3");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("2");

        btgValor.add(rdb5);
        rdb5.setIconTextGap(10);
        rdb5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdb5ActionPerformed(evt);
            }
        });

        btgValor.add(rdb4);
        rdb4.setIconTextGap(10);
        rdb4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdb4ActionPerformed(evt);
            }
        });

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("5");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("4");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(rdb1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(rdb2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(rdb3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(rdb4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rdb5)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(rdb5)
                            .addComponent(rdb4))
                        .addGap(8, 8, 8)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(rdb3)
                            .addComponent(rdb2)
                            .addComponent(rdb1))
                        .addGap(8, 8, 8)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))))
                .addContainerGap())
        );

        javax.swing.GroupLayout jdCalificarLayout = new javax.swing.GroupLayout(jdCalificar.getContentPane());
        jdCalificar.getContentPane().setLayout(jdCalificarLayout);
        jdCalificarLayout.setHorizontalGroup(
            jdCalificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jdCalificarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3)
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jdCalificarLayout.setVerticalGroup(
            jdCalificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jdCalificarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jdCalificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jdComparador.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jdComparadorComponentShown(evt);
            }
        });

        txtCopia.setEditable(false);
        jScrollPane7.setViewportView(txtCopia);

        txtOriginal.setEditable(false);
        txtOriginal.setColumns(20);
        txtOriginal.setRows(5);
        jScrollPane8.setViewportView(txtOriginal);

        jButton4.setText("Aceptar Cambios");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jdComparadorLayout = new javax.swing.GroupLayout(jdComparador.getContentPane());
        jdComparador.getContentPane().setLayout(jdComparadorLayout);
        jdComparadorLayout.setHorizontalGroup(
            jdComparadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jdComparadorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jdComparadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jdComparadorLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton4))
                    .addGroup(jdComparadorLayout.createSequentialGroup()
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 517, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 508, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(23, 23, 23))
        );
        jdComparadorLayout.setVerticalGroup(
            jdComparadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jdComparadorLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jdComparadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane8)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 399, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        txtCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCodigoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCodigoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCodigoKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(txtCodigo);

        jButton1.setText("Guardar Cambios");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Proyectos");
        jtProyectos.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jtProyectos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtProyectosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtProyectos);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 709, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(60, 60, 60))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCodigoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoKeyPressed
//        System.out.println( evt.getKeyCode() );
        
    }//GEN-LAST:event_txtCodigoKeyPressed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        DefaultTreeModel modelo = (DefaultTreeModel)this.jtProyectos.getModel();
        DefaultMutableTreeNode raiz = (DefaultMutableTreeNode)modelo.getRoot();
        JSONObject params = new JSONObject();
        JSONArray totalProyectos = new JSONArray();
        for (int i = 0; i < raiz.getChildCount(); i++) {
            PROYECTO nProyecto = (PROYECTO)( (DefaultMutableTreeNode)raiz.getChildAt(i)).getUserObject();
            JSONObject nPJSON = nProyecto.toJSON( !endpoint.equals("listarProyectos") );
            System.out.println(nPJSON);
            nPJSON.put("id", nProyecto.getId() );
            nPJSON.put("readme", nProyecto.getReadme() );
            totalProyectos.add( nPJSON.toJSONString() );
        }
        params.put("elimProyects", elimProyects);
        params.put("proyectos", totalProyectos);
        params.put("tabla", endpoint.equals("listarProyectos") ? "proyecto" : "copia_fork" );
        
        BE.read("crearProyecto", params);
        System.out.println(params.toJSONString());
        
    }//GEN-LAST:event_jButton1MouseClicked

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
            JSONObject data = new JSONObject();
            data.put("id", id);
            if(endpoint.equals("listarForks")){
                data.put("pulleados", forkeados ? 1 : 0);
            }
            JSONArray proyectos = (JSONArray)BE.read(endpoint, data);
            System.out.println(proyectos);
            DefaultTreeModel modelo = (DefaultTreeModel)this.jtProyectos.getModel();
            DefaultMutableTreeNode raiz = (DefaultMutableTreeNode)modelo.getRoot();
            for (Object proyecto : proyectos) {
                try {
                    JSONObject test = (JSONObject)JSON.parse(proyecto.toString());
                    JSONObject myJSON = new JSONObject();
                    System.out.println(test);
                    PROYECTO nProyecto = new PROYECTO( test );
                    modelo.setRoot( raiz );
                    DefaultMutableTreeNode nNodo = new DefaultMutableTreeNode( nProyecto );
//                    nNodo.
                    Listar( nProyecto, nNodo);
                    raiz.add(nNodo);
                    System.out.println(test);
                    modelo.reload();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
//            File archivo = null;
//            try {
//                archivo = new File("./zombies.labVII");
//                if( archivo.exists() ){
//                    FileInputStream entrada = new FileInputStream( archivo );
//                    ObjectInputStream objeto = new ObjectInputStream( entrada );
//                    CARPETA temp;
//                    try {
//                        while(( temp =(CARPETA)objeto.readObject() ) != null){
//                            DefaultMutableTreeNode raiz = new DefaultMutableTreeNode( temp );
//                            modelo.setRoot(raiz);
//                            Listar( temp, (DefaultMutableTreeNode)modelo.getRoot());
//                            modelo.reload();
//                        }
//                    } catch (Exception e) {
//                        System.out.println( "aaa" + e );
//                    }
//                    finally{
//                        objeto.close();
//                        entrada.close();
//                    }
//                }
//            } catch (Exception e) {
//                System.out.println("error leer");
//            }
//            
            
        // TODO add your handling code here:
    }//GEN-LAST:event_formComponentShown
    private void jmCrearProyectoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmCrearProyectoActionPerformed
        // TODO add your handling code here:]
        String nombre = JOptionPane.showInputDialog(this, "Ingrese el nombre de la carpeta");
        if( nombre.isEmpty()){
            return;
        }
        CARPETA nCarpeta = new CARPETA(nombre);
        carpSelect.addItem(nCarpeta);
        DefaultMutableTreeNode nNode = new DefaultMutableTreeNode(nCarpeta);
        selectedNode.add(nNode);
        DefaultTreeModel modelo = (DefaultTreeModel)this.jtProyectos.getModel();
        modelo.reload();
//        DataInputStream input;
//        BufferedInputStream bis;
//        BufferedOutputStream bos;
//        int in;
//        byte[] byteArray;
//        //Fichero a transferir
//        final String filename = "c:\\test.pdf";
//
//       try{
//            final File localFile = new File( filename );
//            bis = new BufferedInputStream(new FileInputStream(localFile));
//            bos = new BufferedOutputStream(globalSocket.getOutputStream());
//            //Enviamos el nombre del fichero
//            DataOutputStream dos=new DataOutputStream(globalSocket.getOutputStream());
//            dos.writeUTF(localFile.getName());
//            //Enviamos el fichero
//            byteArray = new byte[8192];
//            while ((in = bis.read(byteArray)) != -1){
//                bos.write(byteArray,0,in);
//            }
//            bis.close();
//            bos.close();
//
//       }catch ( Exception e ) {
//          System.err.println(e);
//       }
    }//GEN-LAST:event_jmCrearProyectoActionPerformed

    private void jtProyectosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtProyectosMouseClicked
        // TODO add your handling code here:
        int row = this.jtProyectos.getClosestRowForLocation(evt.getX(), evt.getY());
        jtProyectos.setSelectionRow(row);
        Object v1 = jtProyectos.getSelectionPath().getLastPathComponent();
        selectedNode = (DefaultMutableTreeNode) v1;
        if( id == LA_RED.usuario.getId() ){
            if( evt.isMetaDown() ){
                if( selectedNode.isRoot() ){
    //                proyectoSelect = (PROYECTO) selectedNode.getUserObject();
                    this.jmMenuRaiz.show(evt.getComponent(), evt.getX(), evt.getY());
                }else if( selectedNode.getUserObject() instanceof CARPETA ){
                    if( selectedNode.getUserObject() instanceof PROYECTO ){
                        jmReadme.show();
                    }else{
                        jmReadme.hide();
                    }
                    carpSelect = (CARPETA) selectedNode.getUserObject();
                    jmMenuProyectos.show(evt.getComponent(), evt.getX(), evt.getY());
                }else if( selectedNode.getUserObject() instanceof ARCHIVO ){
                    jmMenuArchivo.show(evt.getComponent(), evt.getX(), evt.getY());
                }
            }
        }else{
            System.out.println(LA_RED.usuario.getTipo());
            if( evt.isMetaDown() ){
                if( selectedNode.getUserObject() instanceof PROYECTO ){
                    proyectoSelect = (PROYECTO)selectedNode.getUserObject();
                     if( LA_RED.usuario.getTipo() == 3){
                         System.out.println("ENTRE");
                         this.jmFork.setVisible(false);
                     }
                    this.jmMenuPAmigos.show(evt.getComponent(), evt.getX(), evt.getY());
                }
            }
            
        }
        if( selectedNode.getUserObject() instanceof ARCHIVO ){
            archivoSelect = (ARCHIVO) selectedNode.getUserObject();

            this.txtCodigo.setText( archivoSelect.getArchivo() );
        }else if( selectedNode.getUserObject() instanceof PROYECTO ){
            proyectoSelect = (PROYECTO)selectedNode.getUserObject();
            this.txtCodigo.setText( ((PROYECTO)selectedNode.getUserObject()).getReadme());

        }
    }//GEN-LAST:event_jtProyectosMouseClicked

    private void jmCrearArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmCrearArchivoActionPerformed
        // TODO add your handling code here:
        String nombre = JOptionPane.showInputDialog(this, "Ingrese el nombre del archivo");
        ARCHIVO nArchivo = new ARCHIVO(nombre);
        nArchivo.setArchivo("TESTING");
        carpSelect.addItem(nArchivo);
        DefaultMutableTreeNode nNode = new DefaultMutableTreeNode(nArchivo);
        selectedNode.add(nNode);
        DefaultTreeModel modelo = (DefaultTreeModel)this.jtProyectos.getModel();
        modelo.reload();
    }//GEN-LAST:event_jmCrearArchivoActionPerformed

    private void jmAddProjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmAddProjectActionPerformed
        // TODO add your handling code here:
        String nombre = JOptionPane.showInputDialog(this, "Ingrese el nombre del proyecto");
        PROYECTO nCarpeta = new PROYECTO(-1, nombre);
//        carpSelect.addItem(nCarpeta);
        jdReadme.pack();
        jdReadme.setLocationRelativeTo(this);
        this.jdReadme.setVisible(true);
        DefaultMutableTreeNode nNode = new DefaultMutableTreeNode(nCarpeta);
        selectedNode.add(nNode);
        DefaultTreeModel modelo = (DefaultTreeModel)this.jtProyectos.getModel();
        modelo.reload();
        carpSelect = nCarpeta;
    }//GEN-LAST:event_jmAddProjectActionPerformed

    private void jmCambiarNombreCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmCambiarNombreCActionPerformed
        // TODO add your handling code here:z
        String nombre = JOptionPane.showInputDialog(this, "Ingrese el nombre de la carpeta", carpSelect.getNombre() );
        carpSelect.setNombre(nombre);
        DefaultTreeModel modelo = (DefaultTreeModel)this.jtProyectos.getModel();
        modelo.reload();
    }//GEN-LAST:event_jmCambiarNombreCActionPerformed
    private void eliminarItem( Object item ){
        DefaultMutableTreeNode padre = (DefaultMutableTreeNode)selectedNode.getParent();
        if( padre.isRoot() ){
            elimProyects.add( ((PROYECTO)carpSelect).getId() );
        }else{
            CARPETA cPadre = (CARPETA)padre.getUserObject();
            if( item instanceof CARPETA){
                cPadre.deleteItem(carpSelect);
            }else{
                cPadre.deleteItem(archivoSelect);
            }
        }
        selectedNode.removeFromParent();
        DefaultTreeModel modelo = (DefaultTreeModel)this.jtProyectos.getModel();
        modelo.reload();
    }
    private void jmEliminarCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmEliminarCActionPerformed
        // TODO add your handling code here:
        eliminarItem( carpSelect );
    }//GEN-LAST:event_jmEliminarCActionPerformed

    private void jmEliminarArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmEliminarArchivoActionPerformed
        // TODO add your handling code here:
        eliminarItem( archivoSelect );
    }//GEN-LAST:event_jmEliminarArchivoActionPerformed

    private void jmCambiarNombreAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmCambiarNombreAActionPerformed
        // TODO add your handling code here:
        String nombre = JOptionPane.showInputDialog(this, "Ingrese el nombre del archivo", archivoSelect.getNombre() );
        archivoSelect.setNombre(nombre);
        DefaultTreeModel modelo = (DefaultTreeModel)this.jtProyectos.getModel();
        modelo.reload();
    }//GEN-LAST:event_jmCambiarNombreAActionPerformed

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
        ((PROYECTO)carpSelect).setReadme(txtReadme.getText());
    }//GEN-LAST:event_jButton2MouseClicked

    private void jmReadmeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmReadmeActionPerformed
        // TODO add your handling code here:
        jdReadme.pack();
        jdReadme.setLocationRelativeTo(this);
        this.jdReadme.setVisible(true);
        txtReadme.setText( ((PROYECTO)carpSelect).getReadme() );
        jdReadme.hide();
    }//GEN-LAST:event_jmReadmeActionPerformed

    private void btnComentarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnComentarMouseClicked
        // TODO add your handling code here:
        JSONObject data = new JSONObject();
        data.put("id_proyecto", proyectoSelect.getId() );
        data.put("comentario", txtComentario.getText() );
        BE.read("comentarProyecto", data);
        txtComentario.setText("");
        txtComentarios.setText( txtComentarios.getText() + "\n" + txtComentario.getText());
    }//GEN-LAST:event_btnComentarMouseClicked

    private void jmComentarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmComentarActionPerformed
        // TODO add your handling code here:
        this.jdComentario.pack();
        jdComentario.setLocationRelativeTo(this);
        this.jdComentario.setVisible(true);
    }//GEN-LAST:event_jmComentarActionPerformed

    private void jdComentarioComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jdComentarioComponentShown
        // TODO add your handling code here:
        JSONObject data = new JSONObject();
        data.put("id_proyecto", proyectoSelect.getId() );
        JSONArray comentarios = (JSONArray)BE.read("listarComentarios", data);
        String texto = "";
        for (Object comentario : comentarios) {
            JSONObject JSONcom = (JSONObject)comentario;
           texto += JSONcom.get("user_name").toString() + " -> " + JSONcom.get("comentario").toString() + "\n";
        }
         txtComentarios.setText( texto );
    }//GEN-LAST:event_jdComentarioComponentShown

    private void rdb1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdb1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdb1ActionPerformed

    private void rdb2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdb2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdb2ActionPerformed

    private void rdb3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdb3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdb3ActionPerformed

    private void rdb4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdb4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdb4ActionPerformed

    private void rdb5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdb5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdb5ActionPerformed

    private void jmCalificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmCalificarActionPerformed
        // TODO add your handling code here:
        this.jdCalificar.pack();
        jdCalificar.setLocationRelativeTo(this);
        this.jdCalificar.setVisible(true);
    }//GEN-LAST:event_jmCalificarActionPerformed

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        // TODO add your handling code here:
        JSONObject data = new JSONObject();
        data.put("id_proyecto", proyectoSelect.getId() );
        int valor = 0;
        if( this.rdb1.isSelected() ){
            valor = 1;
        }else if( this.rdb2.isSelected() ){
            valor = 2;
        }else if( this.rdb3.isSelected() ){
            valor = 3;
        }else if( this.rdb4.isSelected() ){
            valor = 4;
        }else if( this.rdb5.isSelected() ){
            valor = 5;
        }
        data.put("valor", valor);
        BE.read("calificarProyecto", data);
        txtComentario.setText("");
        txtComentarios.setText( txtComentario.getText() + "\n" + txtComentario.getText());
    }//GEN-LAST:event_jButton3MouseClicked

    private void jdCalificarComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jdCalificarComponentShown
        // TODO add your handling code here:
        JSONObject data = new JSONObject();
        data.put("id_proyecto", proyectoSelect.getId());
        JSONObject response = (JSONObject)BE.read("obtenerCalificacion", data);
        System.out.println(response);
        if(!response.containsKey("valor"))return;
        switch( parseInt( response.get("valor").toString() )){
            case 1:
                rdb1.setSelected(true);
                break;
            case 2:
                rdb2.setSelected(true);
                break;
            case 3:
                rdb3.setSelected(true);
                break;
            case 4:
                rdb4.setSelected(true);
                break;
            case 5:
                rdb5.setSelected(true);
                break;
        }
    }//GEN-LAST:event_jdCalificarComponentShown

    private void jmForkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmForkActionPerformed
        // TODO add your handling code here:
        JSONObject data = new JSONObject();
        data.put("nombre", proyectoSelect.getNombre());
        data.put("user_name", LA_RED.usuario.getUser_name());
        data.put("id_usuario", id);
        data.put("id_proyecto", proyectoSelect.getId());
//        JSONObject archivo = new JSONObject();
//        archivo.put("archivo_original", proyectoSelect.toJSON());
//        archivo.put("archivo", proyectoSelect.toJSON());
        data.put("archivo", proyectoSelect.toJSON( true ));
        BE.read("hacerFork", data);
    }//GEN-LAST:event_jmForkActionPerformed

    private void jmComparadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmComparadorActionPerformed
        // TODO add your handling code here:
        jdComparador.pack();
        jdComparador.setLocationRelativeTo(this);
        jdComparador.setVisible(true);
//        new COMPARADOR()
    }//GEN-LAST:event_jmComparadorActionPerformed

    private void jdComparadorComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jdComparadorComponentShown
        // TODO add your handling code here:
        txtOriginal.setText(archivoSelect.getArchivoOriginal());
        txtCopia.setText(archivoSelect.getArchivo());
        StringTokenizer tk1 = new StringTokenizer( archivoSelect.getArchivoOriginal(), "\n" );
        StringTokenizer tk2 = new StringTokenizer( archivoSelect.getArchivo(), "\n" );
        String val1 = "";
        String val2 = "";
        DefaultHighlighter.DefaultHighlightPainter highlightPainter = new DefaultHighlighter.DefaultHighlightPainter(Color.RED);
        Highlighter h = this.txtOriginal.getHighlighter();
        h.removeAllHighlights();
        int inicio = 0;
        int end = 0;
        while( tk1.hasMoreTokens() && tk2.hasMoreTokens() ){
            String linea1 = tk1.nextToken();
            String linea2 = tk2.nextToken();
            
            System.out.println(linea1 + "--->" + linea2);
            end += linea2.length();
            if( !linea1.equals(linea2) ){
                System.out.println("DIFERENTES");
                val2 += "//Diferentes";
                
                try {
                    h.addHighlight(inicio, end, highlightPainter);
                } catch (Exception e) {
                }
            }
            inicio += linea2.length() - 1;
//            System.out.println(tk1.nextToken() + "------->" + tk2.nextToken());
//            System.out.println(" DIFERENCIA ---> " + ( tk1.nextToken().equals(tk2.nextToken())) );
        }
        
    }//GEN-LAST:event_jdComparadorComponentShown

    private void jmPullearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmPullearActionPerformed
        // TODO add your handling code here:
        JSONObject data = new JSONObject();
        data.put("id_proyecto", proyectoSelect.getId() );
        JSONObject response = (JSONObject)BE.read("pullear", data);
        if( response.get("pulleado").toString().equals("true")){
            JOptionPane.showMessageDialog(this, "Proyecto pulleado", "Exito", JOptionPane.INFORMATION_MESSAGE);
        }else{
            JOptionPane.showMessageDialog(this, "Error al pullear el proyecto", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jmPullearActionPerformed

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jButton4MouseClicked

    private void txtCodigoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoKeyReleased
        // TODO add your handling code here:
        try{
            archivoSelect.setArchivo( txtCodigo.getText() );
            txtCodigo.removeStyle("miEstilo");
    //        if( evt.getKeyCode() == 32){
                String[] palabrasReservadas = new String[]{"while","final","if","new", "for", "return","String","int","double","public","static","void","private","protected","true","false"};
                StyledDocument doc = txtCodigo.getStyledDocument();
                Style estilo = txtCodigo.addStyle("miEstilo", null);
                Style estilo2 = txtCodigo.addStyle("miEstilo2", null);
                txtCodigo.setStyledDocument(doc);
                txtCodigo.removeStyle(null);
                txtCodigo.setStyledDocument( docOriginal );
                StyleConstants.setForeground(estilo, Color.blue);
                StyleConstants.setForeground(estilo2, Color.red);
    //            StyleConstants.setUnderline(estilo, true);
    //            StyleConstants.setFontSize(estilo, 12);
                StyleConstants.setBold(estilo, true);
                StyleConstants.setItalic(estilo, true);
    //            String[] palabras = txtCodigo.getText().split(" ");

    //            doc.setLogicalStyle(1, estilo);
                int inicio = 0;
                int fin = 0;
    //            System.out.println(txtCodigo.getText().length());
    //            System.out.println(evt.getKeyCode());
                for (int i = 0 ; i < txtCodigo.getText().length(); i++) {
    //                if( evt.getKeyCode() == 32 ){
                        if( txtCodigo.getText().charAt(i) == ' '){
                            System.out.println(txtCodigo.getText().substring(inicio, i));
                            for (String palabrasReservada : palabrasReservadas) {
                                if( ( txtCodigo.getText().substring(inicio, i)).equals(palabrasReservada)){ 
    //                                System.out.println(txtCodigo.getText().substring(inicio, i + 1));
                                    System.out.println("Entre");
                                    doc.setCharacterAttributes(inicio, i , txtCodigo.getStyle("miEstilo"), true);
                                }else{
    //                                doc.setCharacterAttributes(inicio, i , txtCodigo.getStyle("miEstilo2"), fas);
                                }
                            }
                            inicio = i + 1;
                        }
    //                }

                }
    //            System.out.println("Hello");
    //        }
        }catch( Exception e ){
            
        }
    }//GEN-LAST:event_txtCodigoKeyReleased

    private void txtCodigoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoKeyTyped
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtCodigoKeyTyped

    private void jmMergeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmMergeActionPerformed
        // TODO add your handling code here:
        
        JSONObject params = new JSONObject();
        JSONArray totalProyectos = new JSONArray();
        PROYECTO nProyecto = proyectoSelect;
        JSONObject nPJSON = nProyecto.toJSON( false );
        nPJSON.put("id", -1 );
        String nombre = nProyecto.getNombre();
        nPJSON.put("nombre", nombre.substring(0, nombre.indexOf("(FORK FROM") ) + "(" + 
                nombre.substring(11 + nombre.indexOf("(FORK FROM"), nombre.length() -1) + "-" +
                LA_RED.usuario.getUser_name() + "-merge)");
//        nPJSON.put("id_usuario", nProyecto.get);
//        nPJSON.put("readme", nProyecto.getReadme() );
        totalProyectos.add( nPJSON.toJSONString() );
//        params.put("elimProyects", elimProyects);
        params.put("proyectos", totalProyectos);
        params.put("id_usuario", nProyecto.getId_usuario_original());
        params.put("tabla", "proyecto");
        
        BE.read("crearProyecto", params);
        System.out.println(params.toJSONString());
    }//GEN-LAST:event_jmMergeActionPerformed
    public void Listar(CARPETA nCarpeta, DefaultMutableTreeNode nodo){
        DefaultMutableTreeNode nNodo = new DefaultMutableTreeNode("temp");
        for (CARPETA col : nCarpeta.getCarpetas()) {
            nNodo = new DefaultMutableTreeNode( col );
            nodo.add(nNodo);
            Listar( col, nNodo );
        }
        for (ARCHIVO col : nCarpeta.getArchivos()) {
            nNodo = new DefaultMutableTreeNode( col );
            nodo.add(nNodo);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PROJECTS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PROJECTS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PROJECTS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PROJECTS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PROJECTS().setVisible(true);
            }
        });
    }
    private DefaultMutableTreeNode selectedNode;
    private JSONArray elimProyects = new JSONArray();
    private CARPETA carpSelect;
    private PROYECTO proyectoSelect;
    private ARCHIVO archivoSelect;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btgValor;
    private javax.swing.JButton btnComentar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JDialog jdCalificar;
    private javax.swing.JDialog jdComentario;
    private javax.swing.JDialog jdComparador;
    private javax.swing.JDialog jdReadme;
    private javax.swing.JMenuItem jmAddProject;
    private javax.swing.JMenuItem jmCalificar;
    private javax.swing.JMenuItem jmCambiarNombreA;
    private javax.swing.JMenuItem jmCambiarNombreC;
    private javax.swing.JMenuItem jmComentar;
    private javax.swing.JMenuItem jmComparador;
    private javax.swing.JMenuItem jmCrearArchivo;
    private javax.swing.JMenuItem jmCrearProyecto;
    private javax.swing.JMenuItem jmEliminarArchivo;
    private javax.swing.JMenuItem jmEliminarC;
    private javax.swing.JMenuItem jmFork;
    private javax.swing.JPopupMenu jmMenuArchivo;
    private javax.swing.JPopupMenu jmMenuPAmigos;
    private javax.swing.JPopupMenu jmMenuProyectos;
    private javax.swing.JPopupMenu jmMenuRaiz;
    private javax.swing.JMenuItem jmMerge;
    private javax.swing.JMenuItem jmPullear;
    private javax.swing.JMenuItem jmReadme;
    private javax.swing.JTree jtProyectos;
    private javax.swing.JRadioButton rdb1;
    private javax.swing.JRadioButton rdb2;
    private javax.swing.JRadioButton rdb3;
    private javax.swing.JRadioButton rdb4;
    private javax.swing.JRadioButton rdb5;
    private javax.swing.JTextPane txtCodigo;
    private javax.swing.JTextArea txtComentario;
    private javax.swing.JTextPane txtComentarios;
    private javax.swing.JTextPane txtCopia;
    private javax.swing.JTextArea txtOriginal;
    private javax.swing.JTextArea txtReadme;
    // End of variables declaration//GEN-END:variables
}
